<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.36">
  <POU Name="MAIN" Id="{a635b5c6-3da2-47b6-922c-5d54bc332cb7}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR

	fbReadMB : FB_ReadModbus;

	// THIS IS FOR THE WIHART GATEWAY
	//mbAddrs : ARRAY[0..1] OF MODBUS_DATA_MAP :=  [ (_ipAddress := '192.168.1.101', _startAddress:= 0), (_ipAddress := '192.168.1.101', _startAddress:= 12) ];
	
	// THIS IS FOR THE ISA100.11A GATEWAY
	mbAddrs : ARRAY[0..3] OF MODBUS_DATA_MAP :=  [ 
			(_ipAddress := '192.168.254.253', _startAddress:= 6), 
			(_ipAddress := '192.168.254.253', _startAddress:= 18),
			(_ipAddress := '192.168.254.253', _startAddress:= 30),
			(_ipAddress := '192.168.254.253', _startAddress:= 42)
		];
 
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//
// BEGIN PRODUCE THE DATA
//
// XMEAS values will come from the external TESIM program using ADS


//
// BEGIN WRITE SIGNALS to OUTPUTS
//
// CURRENT LOOPS
XMEAS_IO_IOUT[XMEAS_IO_IDX.A_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.A_FLOW],		pv_max:=G_PARAMS.A_FLOW_MAX,pv_min:=G_PARAMS.A_FLOW_MIN,dac_max:=VOUT_WD_RANGE, dac_min:=0);
XMEAS_IO_IOUT[XMEAS_IO_IDX.D_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.D_FLOW],		pv_max:=G_PARAMS.D_FLOW_MAX,pv_min:=G_PARAMS.D_FLOW_MIN,dac_max:=VOUT_WD_RANGE, dac_min:=0);
XMEAS_IO_IOUT[XMEAS_IO_IDX.E_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.E_FLOW],		pv_max:=G_PARAMS.E_FLOW_MAX,pv_min:=G_PARAMS.E_FLOW_MIN,dac_max:=VOUT_WD_RANGE, dac_min:=0);
XMEAS_IO_IOUT[XMEAS_IO_IDX.P_REACTOR]	:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.P_REACTOR],	pv_max:=G_PARAMS.P_REACTOR_MAX,pv_min:=G_PARAMS.P_REACTOR_MIN,dac_max:=VOUT_WD_RANGE, dac_min:=0);

// VOLTAGES
XMEAS_IO_VOUT[XMEAS_IO_IDX.A_FLOW]		:= XMEAS_IO_IOUT[XMEAS_IO_IDX.A_FLOW];
XMEAS_IO_VOUT[XMEAS_IO_IDX.D_FLOW]		:= XMEAS_IO_IOUT[XMEAS_IO_IDX.D_FLOW];
XMEAS_IO_VOUT[XMEAS_IO_IDX.E_FLOW]		:= XMEAS_IO_IOUT[XMEAS_IO_IDX.E_FLOW];
XMEAS_IO_VOUT[XMEAS_IO_IDX.P_REACTOR]	:= XMEAS_IO_IOUT[XMEAS_IO_IDX.P_REACTOR];


//
// BEGIN MODBUS POLLING SEGMENT from the GATEWAY
//
fbReadMB(addrs := mbAddrs );

// poll modbus registers
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.A_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.A_FLOW] + MBS_XMEAS_CAL_OFFSET[1];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.D_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.D_FLOW]+ MBS_XMEAS_CAL_OFFSET[2];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.E_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.E_FLOW] + MBS_XMEAS_CAL_OFFSET[3];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.P_REACTOR] := fbReadMB.registerValues[XMEAS_MBS_IDX.P_REACTOR] + MBS_XMEAS_CAL_OFFSET[4];

// convert raw modbus signals to process signals
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.A_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.A_FLOW],		pv_max:=G_PARAMS.A_FLOW_MAX, 		pv_min:=G_PARAMS.A_FLOW_MIN, 	i_max:=G_PARAMS.AOUT_MAX, i_min:=G_PARAMS.AOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.D_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.D_FLOW],		pv_max:=G_PARAMS.D_FLOW_MAX, 		pv_min:=G_PARAMS.D_FLOW_MIN, 	i_max:=G_PARAMS.AOUT_MAX, i_min:=G_PARAMS.AOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.E_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.E_FLOW],		pv_max:=G_PARAMS.E_FLOW_MAX, 		pv_min:=G_PARAMS.E_FLOW_MAX, 	i_max:=G_PARAMS.AOUT_MAX, i_min:=G_PARAMS.AOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.P_REACTOR]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.P_REACTOR],	pv_max:=G_PARAMS.P_REACTOR_MAX, 	pv_min:=G_PARAMS.P_REACTOR_MIN, i_max:=G_PARAMS.AOUT_MAX, i_min:=G_PARAMS.AOUT_MIN));

//
// END MODBUS POLLING SEGMENT from the GATEWAY
//

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>